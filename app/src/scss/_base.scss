// Resets
@import 'compass/reset';

// Configs
$total-width: 100%;
$column-width: 60px;
$gutter-width: 0px;
$columns: 12;

// Variables
//$icons: sprite-map("icons/*.png", $spacing: 10px, $layout: vertical);

// Grid
@function gridsystem-width($columns:$columns){
  @return ($column-width * $columns) + ($gutter-width * $columns);
}
$total-width: gridsystem-width($columns);

// Mixins
@mixin clearfix(){
  *zoom:1;
  &:before,
  &:after {
      content:"";
      display:table;
  }
  &:after {
      clear:both;
  }
}

@mixin row($columns:$columns){
  display: block;
  width: $total-width*(($gutter-width + gridsystem-width($columns))/gridsystem-width($columns));
  margin: 0 $total-width*((($gutter-width*.5)/gridsystem-width($columns))*-1);
  @include clearfix();
}

@mixin column($x,$columns:$columns){
  display: inline;
  float: left;
  width: $total-width*(((($gutter-width+$column-width)*$x)-$gutter-width) / gridsystem-width($columns));
  margin: 0 $total-width*(($gutter-width*.5)/gridsystem-width($columns));
}

@mixin push($offset:1){
  margin-left: $total-width*((($gutter-width+$column-width)*$offset) / gridsystem-width($columns)) + $total-width*(($gutter-width*.5)/gridsystem-width($columns));
}

@mixin pull($offset:1){
  margin-right: $total-width*((($gutter-width+$column-width)*$offset) / gridsystem-width($columns)) + $total-width*(($gutter-width*.5)/gridsystem-width($columns));
}

@mixin icon($icon-name, $position: absolute, $content: true){
  @if $content == true {
    content: "";
  }
  position: $position;
  display: inline-block;
  background-image: sprite-url($icons);
  background-position: sprite-position($icons, $icon-name);
  @include sprite-dimensions($icons, $icon-name);
}

@mixin placeholder{
  &::-webkit-input-placeholder {@content;}
  &:-moz-placeholder           {@content;}
  &::-moz-placeholder          {@content;}
  &:-ms-input-placeholder      {@content;}
  &::placeholder               {@content;}
}

@mixin font($font-size, $line-height){
  font-size: $font-size + px;
  font-size: $font-size / 10 + rem;
  line-height: $line-height + px;
  line-height: $line-height / 10 + rem;
}

@mixin media($media-width){
  @media screen and (max-width: $media-width){
    @content;
  }
}

@mixin font-face($font-name, $font-folder, $font-filename, $font-weight: normal, $font-style: normal){
  @font-face {
    font-family: $font-name;
    src: url('../fonts/' + $font-folder + '/' + $font-filename + '.eot');
    src: url('../fonts/' + $font-folder + '/' + $font-filename + '.eot?#iefix') format('embedded-opentype'),
         url('../fonts/' + $font-folder + '/' + $font-filename + '.woff') format('woff'),
         url('../fonts/' + $font-folder + '/' + $font-filename + '.ttf') format('truetype'),
         url('../fonts/' + $font-folder + '/' + $font-filename + '.svg') format('svg');
    font-weight: $font-weight;
    font-style: $font-style;
  }
}

@mixin font-smoothing($val: antialiased){
  -webkit-font-smoothing: $val;
  -moz-font-smoothing: $val;
  -ms-font-smoothing: $val;
  -o-font-smoothing: $val;
}

@mixin arrow($width, $height, $background, $direction){
  width: 0px;
  height: 0px;
  border-style: solid;
  @if $direction == top{
    border-width: 0 $width / 2 + px $height + px $width / 2 + px;
    border-color: transparent transparent $background transparent;
  }
  @if $direction == right{
    border-width: $height / 2 + px 0 $height / 2 + px $width + px;
    border-color: transparent transparent transparent $background;
  }
  @if $direction == bottom{
    border-width: $height + px $width / 2 + px 0 $width / 2 + px;
    border-color: $background transparent transparent transparent;
  }
  @if $direction == left{
    border-width: $height / 2 + px $width + px $height / 2 + px 0;
    border-color: transparent $background transparent transparent;
  }
  @if $direction == top-left{
    border-width: $height + px $width + px 0 0;
    border-color: $background transparent transparent transparent;
  }
  @if $direction == top-right{
    border-width: 0 $width + px $height + px 0;
    border-color: transparent $background transparent transparent;
  }
  @if $direction == bottom-right{
    border-width: 0 0 $height + px $width + px;
    border-color: transparent transparent $background transparent;
  }
  @if $direction == bottom-left{
    border-width: $width + px 0 0 $height + px;
    border-color: transparent transparent transparent $background;
  }
}

// Font-Face
//@include font-face($font-name, $font-folder, $font-filename, $font-weight, $font-style);

// Base style
html{
  height: 100%;
  font-size: 62.5%;
}
body{
  @include font-smoothing;
  @include font(14, 21);
  font-family: sans-serif;
  width: 100%;
  height: 100%;
  min-height: 100%;
  position: relative;
  box-sizing: border-box;
  *,*:after,*:before{
    box-sizing: border-box;
    outline: none !important;
    @include appearance(none);
  }
}
h1,h2,h3,h4,h5,h6,strong,b{
  font-weight: 700;
}
h1{
  @include font(32, 32);
}
h2{
  @include font(24, 24);
}
h3{
  @include font(18, 18);
}
h4{
  @include font(16, 16);
}
h5{
  @include font(14, 14);
}
h6{
  @include font(12, 12);
}
i,em{
  font-style: italic;
}
img, iframe{
  max-width: 100%;
  height: auto;
}

p{
  margin: 20px 0;
}

ul, ol{
  margin: 20px 0;
}

table{
  width: 100%;
  th{
    text-align: center;
    font-weight: 700;
    background: #ccc;
  }
  td,th{
    padding: 10px;
    border: 1px solid #000;
  }
}

a{
  text-decoration: underline;
  &:hover{
    text-decoration: none;
  }
}

%inner-ol{
  ol{
    counter-reset: cnt;
    li{
      padding-left: 20px;
      &:before{
        counter-increment: cnt;
        content: counter(cnt, lower-alpha) ")";
        position: absolute;
        top: 0;
        left: 0;
      }
    }
  }
}

%inner-ul{
  ul{
    li{
      padding-left: 20px;
      position: relative;
      &:before{
        content: "*";
        position: absolute;
        top: 2px;
        left: 0;
      }
    }
  }
}

ul{
  & > li{
    padding-left: 20px;
    position: relative;
    &:before{
      content: "â€”";
      position: absolute;
      top: 0;
      left: 0;
    }
  }
  @extend %inner-ul;
  @extend %inner-ol;
}
ol{
  counter-reset: cnt;
  & > li{
    position: relative;
    padding-left: 20px;
    &:before{
      content: counter(cnt) ".";;
      counter-increment: cnt;
      position: absolute;
      top: 0;
      left: 0;
    }
  }
  @extend %inner-ul;
  @extend %inner-ol;
}
